# modsecurity.conf

SecRuleEngine On
SecRequestBodyAccess On
SecResponseBodyAccess On

# Set the path to the ModSecurity rules
SecRuleSetBaseDir /etc/modsecurity.d/

# # Include the OWASP ModSecurity Core Rule Set (CRS)
# Include modsecurity.d/owasp-modsecurity-crs/crs-setup.conf
# Include modsecurity.d/owasp-modsecurity-crs/rules/*.conf

# Enable audit logging
SecAuditEngine On
SecAuditLogType Concurrent
SecAuditLog /var/log/modsec_audit.log

# Set the audit log format
SecAuditLogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\""

# Set the server ID for the audit log
SecServerID "MyWebApp"

# Set the debug log level (optional)
# SecDebugLogLevel 0

# Set other ModSecurity configuration options as needed
# ...

# The SecRuleEngine directive enables ModSecurity rule processing.
# The SecRequestBodyAccess and SecResponseBodyAccess directives enable access to request and response bodies for rule inspection.
# The SecRuleSetBaseDir directive specifies the base directory where the ModSecurity rules are located.
# The Include directives include the OWASP ModSecurity Core Rule Set (CRS) files, which provide an extensive set of rules to protect against various web application attacks. Adjust the paths to match the location of the CRS files on your system.
# The SecAuditEngine directive enables audit logging.
# The SecAuditLogType directive sets the audit log type to Concurrent, allowing multiple processes to write to the log file simultaneously.
# The SecAuditLog directive specifies the path to the audit log file.
# The SecAuditLogFormat directive sets the format of the audit log entries.
# The SecServerID directive sets the server ID for the audit log, which helps identify the server generating the log entries.
# The SecDebugLogLevel directive (commented out by default) can be used to set the debug log level if needed for troubleshooting.
