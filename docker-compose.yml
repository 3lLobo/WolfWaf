version: '3'

services:
  webapp:
    image: 3llobo/iphuntermap
    ports:
      - '5000:3000'
    expose:
      - '5000'
    # Add any additional configurations for your web app service

  suricata:
    image: jasonish/suricata
    # name: suricata
    command: suricata -c /etc/suricata/suricata.yaml -i eth0
    volumes:
      - ./suricata:/etc/suricata
      - ./suricata-logs:/var/log/suricata
    network_mode: "service:webapp"
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_NICE
      # This Suricata service runs as the firewall for the web app, using the oisf/suricata image. It mounts local directories for configuration files and log storage.

  modsecurity:
    image: owasp/modsecurity-crs:nginx
    # name: modsecurity
    volumes:
      - ./modsecurity:/etc/modsecurity
      - ./nginx/nginx.conf:/etc/nginx/templates/nginx.conf
      - ./modsecurity-override.conf:/etc/modsecurity.d/modsecurity-override.conf
    environment:
      - PROXY=1
      - METRICS_ALLOW_FROM=172.23.0.1
      - SSL_PORT=443
    ports:
      - '80:80'
      - '433:433'
    # This ModSecurity service runs as the firewall for the web app, using the owasp/modsecurity image. It mounts a local directory for custom rule configurations.

    # nginx:
    #   # name: nginx
    #   image: nginx:latest
    #   volumes:
    #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    #     # - .nginx/modsecurity.conf:/etc/nginx/modsecurity.conf
    #     - ./nginx_log:/var/log/nginx
    #   ports:
    #     - '80:80'
    #   # Start nginx with custom conf
    #   # entrypoint: /bin/bash -c "nginx -c /etc/nginx/nginx.conf && tail -f /dev/null"
    #   environment:
    #     - PORT=80
    #   depends_on:
    #     - webapp
    # The reverse-proxy service uses Nginx to serve traffic on port 80 and forward it to the web app.
    # Mount the Nginx configuration file (nginx/nginx.conf) and adjust the volume mapping as per your needs.

  zeek:
    image: zeek/zeek
    # name: zeek
    command: zeek -i eth0 -C zeek/zeek-config.zeek
    volumes:
      - ./zeek:/zeek
      - ./zeek-logs:/usr/local/zeek/logs
    network_mode: "service:webapp"
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_NICE
    # This Zeek service captures and analyzes network traffic using the zeek image. Mount local directories for configuration files and log storage.

    # tshark:
    #   image: toendeavour/tshark
    #   # name: tshark
    #   command: -i eth0 -w /captures/capture.pcap
    #   volumes:
    #     - ./captures:/captures
    #   network_mode: host
    #   cap_add:
    #     - NET_ADMIN
    #   # The tshark service captures network traffic on the host interface (eth0) and saves it to a file in the 'captures' directory.

    #   # logstash:
    #   #   # name: logstash
    #   #   image: docker.elastic.co/logstash/logstash:8.7.1
    #   #   volumes_from:
    #   #     - zeek
    #   #   volumes:
    #   #     - ./logstash-config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
